<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
        
        <!-- 扫描数据源的配置文件 -->
         <context:property-placeholder location="classpath:db.properties" ignore-unresolvable="true"></context:property-placeholder>
        
        <!-- spring管理数据源 -->
        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        	<property name="driverClassName" value="${jdbc.driver}"></property>
        	<property name="url" value="${jdbc.url}"></property>
        	<property name="username" value="${jdbc.username}"></property>
        	<property name="password" value="${jdbc.password}"></property>
        	<property name="maxActive" value="10"></property>
        	<property name="maxIdle" value="5"></property>
        </bean>
             
        <!-- 配置sqlSessionFactory锁需要的文  集成mybatis -->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        	<!-- 配置数据源 -->
        	<property name="dataSource" ref="dataSource"></property>
        	<!-- 加载mybatis的配置文件 -->
			<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>

        </bean>
        
        <!-- 扫描mapper -->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        	<!-- 注意mapper的xml和接口类在一个文件里面  如果要扫描多个包的话 中间用半角符号分隔开-->
        	<property name="basePackage" value="com.sofency.ssm.mapper"></property>
        	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!-- 	<property name="annotationClass" value="org.springframework.stereotype.Repository"></property> -->
        </bean>
        
        
        <!-- 事务管理器 -->
       <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       		<property name="dataSource" ref="dataSource"></property>
       </bean>
       
       <!-- 使用spring 配置JedisPoolConfig -->
       <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
            <!-- 最大空闲数 -->
       		<property name="maxIdle" value="50"></property>
       		<!-- 最大连接数 -->
       		<property name="maxTotal" value="100"></property>
       		<!-- 最大等待时间 -->
       		<property name="maxWaitMillis" value="20000"></property>
       </bean>
       <!-- 配置redis缓存 -->
       <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
       		<property name="hostName" value="106.12.208.167"></property>
       		<property name="port" value="6379"></property>
       		<property name="password" value="sofency1234"></property>
       		<property name="poolConfig" ref="poolConfig"></property>
       </bean>
        
        <!-- 配置redistemplate -->
        <bean id="jdkSerializationRedisSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"></bean>
        <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
        <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        	<property name="connectionFactory" ref="connectionFactory"></property>
        	<property name="keySerializer" ref="stringRedisSerializer"></property><!-- 作为key的序列化器 -->
        	<property name="valueSerializer" ref="jdkSerializationRedisSerializer"></property><!--作为value的序列化器  -->
        </bean>
</beans>